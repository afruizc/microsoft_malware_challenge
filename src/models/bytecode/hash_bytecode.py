from sklearn.feature_extraction import HashingVectorizer
import gzip as gzip
import itertools
import os
from sklearn.feature_extraction.text import HashingVectorizer
from sklearn.linear_model import SGDClassifier
from sklearn.linear_model import PassiveAggressiveClassifier
from sklearn.linear_model import Perceptron
from sklearn.naive_bayes import MultinomialNB

def get_file(path):
    with gzip.open(path, 'rb') as f:
        return [line.strip() for line in f.readlines()]

def stream_files(test=False):
    """
    Generator function to return a single bytecode file from the list of
    bytecode files
    """
    if test:
        path = '/malware/data/test/'
    else:
        path = '/malware/data/train/'

    files = os.dir(path)
    for f in files:
        yield get_file(path + f)

def make_vectorizer():
    return HashingVectorizer(decode_error='ignore',
            n_features=2**18,
            non_negative=True,
            analyzer='word',
            encoding='bytes')

def get_batch(file_iter, size):

